{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/frontend/frontend-shared.ts","webpack:///./src/frontend/frontend-spb/frontend-spb-api.ts","webpack:///./src/frontend/frontend-spb/frontend-spb.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","PaypalPayments","jQuery","animate","scrollTop","message","html","action","data","settings","async","crossDomain","url","replaceVars","paypal_brasil_settings","paypal_brasil_handler_url","ACTION","method","dataType","contentType","JSON","stringify","ajax","show","hide","length","document","body","trigger","submit","str","replaces","replacedStr","replace","RegExp","paymentSpb","is_order_pay_page","val","Promise","resolve","reject","makeRequest","nonce","first_name","last_name","country","address_line_1","address_line_2","number","city","state","neighborhood","postcode","phone","done","response","ec","fail","jqXHR","responseJSON","approve","orderID","payerID","paymentID","submitForm","error","triggerUpdateCheckout","setNotices","error_notice","cancel","paypal_brasil_spb_settings","cancel_message","PaypalPaymentsSpb","super","$body","on","this","updateCheckoutButton","renderPayPalButton","isPaypalPaymentsSelected","showPaypalButton","showDefaultButton","getElementById","innerHTML","paypal","Buttons","locale","style","size","color","shape","format","label","createOrder","onApprove","onError","onCancel","render"],"mappings":"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","file":"js/frontend-spb.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export class PaypalPayments {\n    /**\n     * Scroll window to top.\n     */\n    static scrollTop() {\n        jQuery('html, body').animate({ scrollTop: 0 }, 300);\n    }\n    /**\n     * Set global notices.\n     */\n    static setNotices(message) {\n        jQuery('.woocommerce-notices-wrapper:first').html(message);\n    }\n    /**\n     * Make a Ajax request\n     * @param action\n     * @param data\n     */\n    static makeRequest(action, data) {\n        const settings = {\n            async: true,\n            crossDomain: true,\n            url: PaypalPayments.replaceVars(paypal_brasil_settings.paypal_brasil_handler_url, { ACTION: action }),\n            method: \"POST\",\n            dataType: 'json',\n            contentType: 'application/json; charset=utf-8',\n            data: JSON.stringify(data),\n        };\n        return jQuery.ajax(settings);\n    }\n    /**\n     * Show default submit button.\n     */\n    static showDefaultButton() {\n        jQuery('#paypal-brasil-button-container .default-submit-button').show();\n        jQuery('#paypal-brasil-button-container .paypal-submit-button').hide();\n    }\n    /**\n     * Show PayPal submit button.\n     */\n    static showPaypalButton() {\n        jQuery('#paypal-brasil-button-container .default-submit-button').hide();\n        jQuery('#paypal-brasil-button-container .paypal-submit-button').show();\n    }\n    /**\n     * Check if PayPal payments checkbox is selected.\n     * @returns {boolean}\n     */\n    static isPaypalPaymentsSelected() {\n        return !!jQuery('#payment_method_paypal-brasil-spb-gateway:checked').length;\n    }\n    /**\n     * Trigger update checkout.\n     */\n    static triggerUpdateCheckout() {\n        jQuery(document.body).trigger('update_checkout');\n    }\n    /**\n     * Trigger update cart.\n     */\n    static triggerUpdateCart() {\n        jQuery(document.body).trigger('wc_update_cart');\n    }\n    /**\n     * Submit form.\n     */\n    static submitForm() {\n        jQuery('form.woocommerce-checkout, form#order_review').submit();\n    }\n    /**\n     * Override any text with {VARIABLE}.\n     * @param str\n     * @param replaces\n     */\n    static replaceVars(str, replaces) {\n        let replacedStr = str;\n        for (let property in replaces) {\n            if (replaces.hasOwnProperty(property)) {\n                replacedStr = replacedStr.replace(new RegExp('{' + property + '}', 'g'), replaces[property]);\n            }\n        }\n        return replacedStr;\n    }\n}\n","import { PaypalPayments } from \"../frontend-shared\";\nexport const paymentSpb = {\n    create: () => {\n        // If is order pay page, return the generated EC.\n        if (paypal_brasil_settings.is_order_pay_page) {\n            return jQuery('#paypal-spb-fields [name=paypal-brasil-spb-order-pay-ec]').val();\n        }\n        // If is checkout, make the request.\n        return new Promise((resolve, reject) => {\n            PaypalPayments.makeRequest('checkout', {\n                nonce: paypal_brasil_settings.nonce,\n                first_name: jQuery('form.woocommerce-checkout [name=billing_first_name]').val(),\n                last_name: jQuery('form.woocommerce-checkout [name=billing_last_name]').val(),\n                country: jQuery('form.woocommerce-checkout [name=billing_country]').val(),\n                address_line_1: jQuery('form.woocommerce-checkout [name=billing_address_1]').val(),\n                address_line_2: jQuery('form.woocommerce-checkout [name=billing_address_2]').val(),\n                number: jQuery('form.woocommerce-checkout [name=billing_number]').val(),\n                city: jQuery('form.woocommerce-checkout [name=billing_city]').val(),\n                state: jQuery('form.woocommerce-checkout [name=billing_state]').val(),\n                neighborhood: jQuery('form.woocommerce-checkout [name=billing_neighborhood]').val(),\n                postcode: jQuery('form.woocommerce-checkout [name=billing_postcode]').val(),\n                phone: jQuery('form.woocommerce-checkout [name=billing_phone]').val(),\n            }).done(function (response) {\n                resolve(response.data.ec);\n            }).fail(function (jqXHR) {\n                reject(jqXHR.responseJSON);\n            });\n        });\n    },\n    approve: (data) => {\n        jQuery('#paypal-spb-fields [name=paypal-brasil-spb-order-id]').val(data.orderID);\n        jQuery('#paypal-spb-fields [name=paypal-brasil-spb-payer-id]').val(data.payerID);\n        jQuery('#paypal-spb-fields [name=paypal-brasil-spb-pay-id]').val(data.paymentID);\n        PaypalPayments.submitForm();\n    },\n    error: (response) => {\n        // Update the checkout to render button again.\n        PaypalPayments.triggerUpdateCheckout();\n        // Only do that if there's a JSON response.\n        if (response) {\n            // Add the notices.\n            PaypalPayments.setNotices(response.data.error_notice);\n            // Scroll screen to top.\n            PaypalPayments.scrollTop();\n        }\n    },\n    cancel: () => {\n        // Update the checkout to render button again.\n        PaypalPayments.triggerUpdateCheckout();\n        // Add notices.\n        PaypalPayments.setNotices(paypal_brasil_spb_settings.cancel_message);\n        // Scroll screen to top.\n        PaypalPayments.scrollTop();\n    }\n};\n","import { PaypalPayments } from \"../frontend-shared\";\nimport { paymentSpb } from \"./frontend-spb-api\";\nclass PaypalPaymentsSpb extends PaypalPayments {\n    constructor() {\n        // Needs to call super.\n        super();\n        // Store jQuery variables.\n        const $body = jQuery('body');\n        // Update checkout button when WooCommerce checkout is updated.\n        $body.on('updated_checkout', this.updateCheckoutButton);\n        // Update checkout button when payment method is changed.\n        jQuery('form.woocommerce-checkout, form#order_review').on('change', '[name=payment_method]', this.updateCheckoutButton);\n        // Render button when WooCommerce checkout is updated.\n        $body.on('updated_checkout', this.renderPayPalButton);\n        // If is order pay page, trigger checkout update.\n        if (paypal_brasil_settings.is_order_pay_page) {\n            jQuery('body').trigger('updated_checkout');\n        }\n    }\n    /**\n     * Update the status of checkout button.\n     */\n    updateCheckoutButton() {\n        // If the Paypal Payments is selected show the PayPal button.\n        if (PaypalPayments.isPaypalPaymentsSelected()) {\n            PaypalPayments.showPaypalButton();\n        }\n        else {\n            PaypalPayments.showDefaultButton();\n        }\n    }\n    /**\n     * Render PayPal Button.\n     */\n    renderPayPalButton() {\n        document.getElementById('paypal-button').innerHTML = '';\n        paypal.Buttons({\n            locale: 'pt_BR',\n            style: {\n                size: 'responsive',\n                color: paypal_brasil_settings.style.color,\n                shape: paypal_brasil_settings.style.format,\n                label: 'pay',\n            },\n            createOrder: paymentSpb.create,\n            onApprove: paymentSpb.approve,\n            onError: paymentSpb.error,\n            onCancel: paymentSpb.cancel,\n        }).render('#paypal-button');\n    }\n}\nnew PaypalPaymentsSpb();\n"],"sourceRoot":""}